(function(global, factory) {
    global.circle = factory()
}(window, (function() {
    var defaultOptions = {
        el: 'canvas',
        arcX: "55",
        arcY: "55",
        arcR: '40',
        type: "0",
        width: "10",
        font: "12px",
        arcscal: '1',
        middleText: [{
            content: '',
            fontsize: '',
            color: "",
            distance: '12',
        }, {
            content: '',
            fontsize: '',
            color: "",
            distance: '12',
        }],
        arc: [{
            color: '#FFD859',
            proportion: '100',
        }]
    };
    var obj = {};
    obj.result = '绘制完成';
    obj.scale = function(scale, thisJson) {
        var n = 0;
        alert();
        setInterval(function() {
            n += .1;
            console.log(n);
            if (n >= scale) {
                return
            }
            cxt.translate(0, 0);
            cxt.scale(1.2, 1.2);
            x = (Math.cos(Math.PI * 2 / 360 * angler) * (Number(arcR) + widthO * scale + 8));
            y = (Math.sin(Math.PI * 2 / 360 * angler) * (Number(arcR) + widthO * scale));
            textX = Number(arcX) + x;
            textY = Number(arcY) + y;
            cxt.strokeStyle = thisJson['color'];
            cxt.stroke();
            cxt.closePath();
            console.log(n)
        }, 500)
    };

    function circle(options) {
        var options = options ? options : {};
        var id = options.el ? options.el : defaultOptions.el;
        var type = options.type ? options.type : defaultOptions.type;
        var arcs = options.arc ? options.arc : defaultOptions.arc;
        var arcX = options.arcX ? options.arcX : defaultOptions.arcX;
        var arcY = options.arcY ? options.arcY : defaultOptions.arcY;
        var arcR = options.arcR ? options.arcR : defaultOptions.arcR;
        var widthO = options.width ? options.width : defaultOptions.width;
        var fonts = options.font ? options.font : defaultOptions.font;
        var middleText = options.middleText ? options.middleText : defaultOptions.middleText;
        var distance = options.distance ? options.distance : defaultOptions.distance;
        var arcscal = options.arcscal ? options.arcscal : defaultOptions.arcscal;
        var canvas = document.getElementById(id);
        var cxt = canvas.getContext("2d");
        var Pi = Math.PI * 2;
        var sAngle = Math.PI / 2 * 3;
        var width = document.documentElement.clientWidth,
            height = arcR * 3;
        if (window.devicePixelRatio) {
            canvas.style.width = "100%";
            canvas.style.height = "auto";
            canvas.height = height * window.devicePixelRatio;
            canvas.width = width * window.devicePixelRatio * arcscal * 1;
            cxt.scale(window.devicePixelRatio, window.devicePixelRatio)
        }
        // canvas.style.width = "100%";
        // canvas.style.height = "auto";
        // canvas.height = height * 2;
        // canvas.width = width * 2 * arcscal * 1;
        cxt.clearRect(0,0,canvas.width,canvas.height);
        cxt.beginPath();
        cxt.arc(arcX, arcY, arcR, 0, Pi, false);
        cxt.lineWidth = widthO;
        cxt.strokeStyle = '#F2F2F2';
        cxt.stroke();
        cxt.closePath();
        if (type == '0') {
            return new Promise(function(resolve, reject) {
              var clientWidth = document.documentElement.clientWidth;
              var fontWidth = clientWidth*2*10.5/750;
              //设置自适应字体大小
              cxt.font = fontWidth + "px Arial";
                for (var i = 0; i < arcs.length; i += 1) {
                  // alert(arcs[i]['proportion'])

                    if (arcs[i]['proportion'] != 0) {
                    // alert(sAngle)
                        var drawPi = arcs[i]['proportion'] / 100 * Pi;
                        var angler;
                        angler = (((sAngle + drawPi) / Math.PI / 2) * 360) - arcs[i]['proportion'] * 1.81;
                        var x1 = Math.cos(Math.PI * 2 / 360 * angler) * (Number(arcR));
                        var y1 = Math.sin(Math.PI * 2 / 360 * angler) * (Number(arcR));
                        var x = (Math.cos(Math.PI * 2 / 360 * angler) * (Number(arcR) + Number(widthO) + arcs[i]['distance'] * 1));
                        var y = (Math.sin(Math.PI * 2 / 360 * angler) * (Number(arcR) + Number(widthO)));
                        var textX = Number(arcX) + x,
                            textY = Number(arcY) + y;
                        cxt.beginPath();
                        cxt.restore();
                        cxt.save();
                        if (arcs[i].hasOwnProperty('scale')) {
                            cxt.arc(arcX, arcY, arcR, sAngle, sAngle + drawPi, false);
                            cxt.lineWidth = widthO;
                            cxt.translate(0, 0);
                            cxt.scale(arcs[i]['scale'], arcs[i]['scale']);
                            x = (Math.cos(Math.PI * 2 / 360 * angler) * (Number(arcR) + widthO * arcs[i]['scale'] + arcs[i]['distance'] * 1));
                            y = (Math.sin(Math.PI * 2 / 360 * angler) * (Number(arcR) + widthO * arcs[i]['scale']));
                            textX = Number(arcX) + x;
                            textY = Number(arcY) + y;
                            cxt.strokeStyle = arcs[i]['color'];
                            cxt.stroke();
                            cxt.closePath()
                        } else {
                            cxt.arc(arcX, arcY, arcR, sAngle, sAngle + drawPi, false);
                            cxt.lineWidth = widthO;
                            cxt.strokeStyle = arcs[i]['color'];
                            cxt.stroke();
                            cxt.closePath()
                        }
                        sAngle = drawPi + sAngle
                        if(arcs[i]['proportion'] == '100'){
                          arcs[i]['proportion'] = '150';
                          drawPi = arcs[i]['proportion'] / 100 * Pi;
                          angler = (((sAngle + drawPi) / Math.PI / 2) * 360) - arcs[i]['proportion'] * 1.81;
                          x1 = Math.cos(Math.PI * 2 / 360 * angler) * (Number(arcR));
                          y1 = Math.sin(Math.PI * 2 / 360 * angler) * (Number(arcR));
                          x = (Math.cos(Math.PI * 2 / 360 * angler) * (Number(arcR) + Number(widthO) + arcs[i]['distance'] * 1));
                          y = (Math.sin(Math.PI * 2 / 360 * angler) * (Number(arcR) + Number(widthO)));
                          textX = Number(arcX) + x;
                          textY = Number(arcY) + y;
                          for (var m = 0; m < arcs[i]['texts'].length; m += 1) {
                              if (arcs[i]['texts'].length > 1) {
                                  if (m % 2 == 0) {
                                      textY = textY + arcs[i]['texts'][m]['lineHeight'] / 2
                                  } else {
                                      if (textY > 160) {
                                          textY = textY + arcs[i]['texts'][m]['lineHeight'] / 2
                                      } else {
                                          textY = textY - arcs[i]['texts'][m]['lineHeight'] / 2
                                      }
                                  }
                              }
                              cxt.beginPath();
                              cxt.restore();
                              // cxt.font = fonts + " arial,Microsoft YaHei";
                              //获取设备宽度
                              var  clientWidth = document.documentElement.clientWidth;
                              //根据设计图中的canvas font字体的占比进行设置
                              var fontWidth = clientWidth*3*8/750;
                              //设置自适应的字体大小
                              cxt.font = fontWidth+"px sans-serif";
                              arcs[i]['texts'][m].hasOwnProperty('textColor') ? cxt.fillStyle = arcs[i]['texts'][m]['textColor'] : (arcs[i].hasOwnProperty('fontColor') ? cxt.fillStyle = arcs[i]['fontColor'] : cxt.fillStyle = arcs[i]['color']);
                              cxt.textBaseline = 'middle';
                              cxt.textAlign = "center";
                              cxt.fillText(arcs[i]['texts'][m]['texts'], textX, textY)
                          }
                        }else{
                          drawPi = arcs[i]['proportion'] / 100 * Pi;
                          angler = (((sAngle + drawPi) / Math.PI / 2) * 360) - arcs[i]['proportion'] * 1.81;
                          x1 = Math.cos(Math.PI * 2 / 360 * angler) * (Number(arcR));
                          y1 = Math.sin(Math.PI * 2 / 360 * angler) * (Number(arcR));
                          x = (Math.cos(Math.PI * 2 / 360 * angler) * (Number(arcR) + Number(widthO) + arcs[i]['distance'] * 1));
                          y = (Math.sin(Math.PI * 2 / 360 * angler) * (Number(arcR) + Number(widthO)));
                          textX = Number(arcX) + x;
                          textY = Number(arcY) + y;
                          for (var m = 0; m < arcs[i]['texts'].length; m += 1) {
                              if (arcs[i]['texts'].length > 1) {
                                  if (m % 2 == 0) {
                                      textY = textY + arcs[i]['texts'][m]['lineHeight'] / 2
                                  } else {
                                      if (textY > 160) {
                                          textY = textY + arcs[i]['texts'][m]['lineHeight'] / 2
                                      } else {
                                          textY = textY - arcs[i]['texts'][m]['lineHeight'] / 2
                                      }
                                  }
                              }
                              cxt.beginPath();
                              cxt.restore();
                              // cxt.font = fonts + " arial,Microsoft YaHei";
                              //获取设备宽度
                              var  clientWidth = document.documentElement.clientWidth;
                              //根据设计图中的canvas font字体的占比进行设置
                              var fontWidth = clientWidth*3*8/750;
                              //设置自适应的字体大小
                              cxt.font = fontWidth+"px sans-serif";
                              arcs[i]['texts'][m].hasOwnProperty('textColor') ? cxt.fillStyle = arcs[i]['texts'][m]['textColor'] : (arcs[i].hasOwnProperty('fontColor') ? cxt.fillStyle = arcs[i]['fontColor'] : cxt.fillStyle = arcs[i]['color']);
                              cxt.textBaseline = 'middle';
                              cxt.textAlign = "center";
                              cxt.fillText(arcs[i]['texts'][m]['texts'], textX, textY)
                          }
                        }

                    }else{
                      var k = arcs[i]['proportion'];
                      if(arcs[i]['proportion'] == '0'){
                        arcs[i]['proportion'] = '50';
                      }
                          drawPi = arcs[i]['proportion'] / 100 * Pi;
                          angler = (((sAngle + drawPi) / Math.PI / 2) * 360) - arcs[i]['proportion'] * 1.81;
                          x1 = Math.cos(Math.PI * 2 / 360 * angler) * (Number(arcR));
                          y1 = Math.sin(Math.PI * 2 / 360 * angler) * (Number(arcR));
                          x = (Math.cos(Math.PI * 2 / 360 * angler) * (Number(arcR) + Number(widthO) + arcs[i]['distance'] * 1));
                          y = (Math.sin(Math.PI * 2 / 360 * angler) * (Number(arcR) + Number(widthO)));
                          textX = Number(arcX) + x;
                          textY = Number(arcY) + y;

                          for (var m = 0; m < arcs[i]['texts'].length; m += 1) {
                              if (arcs[i]['texts'].length > 1) {
                                  if (m % 2 == 0) {
                                      textY = textY + arcs[i]['texts'][m]['lineHeight'] / 2
                                  } else {
                                      if (textY > 160) {
                                          textY = textY + arcs[i]['texts'][m]['lineHeight'] / 2
                                      } else {
                                          textY = textY - arcs[i]['texts'][m]['lineHeight'] / 2
                                      }
                                  }
                              }
                              cxt.beginPath();
                              cxt.restore();
                              // cxt.font = fonts + " arial,Microsoft YaHei";
                              //获取设备宽度
                              var  clientWidth = document.documentElement.clientWidth;
                              //根据设计图中的canvas font字体的占比进行设置
                              var fontWidth = clientWidth*3*8/750;
                              //设置自适应的字体大小
                              cxt.font = fontWidth+"px sans-serif";
                              arcs[i]['texts'][m].hasOwnProperty('textColor') ? cxt.fillStyle = arcs[i]['texts'][m]['textColor'] : (arcs[i].hasOwnProperty('fontColor') ? cxt.fillStyle = arcs[i]['fontColor'] : cxt.fillStyle = arcs[i]['color']);
                              cxt.textBaseline = 'middle';
                              cxt.textAlign = "center";
                              cxt.fillText(arcs[i]['texts'][m]['texts'], textX, textY)
                          }

                    }
                }
                //获取设备宽度
                var  clientWidth = document.documentElement.clientWidth;

                // cxt.font = "bold 12px arial";

                cxt.textBaseline = 'middle';
                cxt.textAlign = "center";
                console.log(middleText)
                for (var j = 0; j < middleText.length; j += 1) {
                  //根据设计图中的canvas font字体的占比进行设置
                    var fonts = middleText[j]['fontsize']?middleText[j]['fontsize']:'12'
                    var fontWidth = clientWidth*3*fonts/750;
                    //设置自适应的字体大小
                    cxt.font = fontWidth+"px sans-serif";
                    cxt.font = ""+middleText[j]['fontWeight']+" "+fontWidth+"px arial";
                    cxt.fillStyle = middleText[j]['color'];
                    if (middleText[j].hasOwnProperty('content') && j == 0) {
                        // cxt.font = middleText[j]['fontsize'] + " arial,Microsoft YaHei ";
                        cxt.fillText(middleText[j]['content'], arcX, arcY - Number(middleText[j]['lineHeight']))
                    } else {
                        // cxt.font =  " bold "+fontWidth+"px arial";
                        cxt.fillText(middleText[j]['content'], arcX, arcY + Number(middleText[j]['lineHeight']))
                    }
                }
                return resolve(obj)
            })
        } else if (type == '1') {}
    }
    return circle
})));
